1. List all the books that are written by Author Loni and has price
    less then 600.
    =>  select * from books where author="loni" and cost<600;


2. List the Issue details for the books that are not returned yet.
    => select * from issue where return_date is null;

3. Update all the blank return_date with 31-Dec-06 excluding 7005
    and 7006.
    => update issue set return_date="2006-12-31" where return_date is null 
        and issue_id not in (7006,7005);


4. List all the Issue details that have books issued for more then 30
    days.
    => select * from issue where datediff(return_date,issue_date)>=30;


5. List all the books that have price in range of 500 to 750 and has
    category as Database.
    => select * from books where category='database' and cost between 500 and 750;


6. List all the books that belong to any one of the following
    categories Science, Database, Fiction, Management.
    => select * from books where category in ("Science", "Database", "Fiction", "Management");


7. List all the members in the descending order of Penalty due on
    them.
    => select * from member order by penalty_amount desc;


8. Modify the price of book with id 103 to Rs 300 and category to
    RDBMS.
    =>  update books set cost=300,category="RDBMS" where book_no=103;


9. List all the books in ascending order of category and descending
    order of price.
    => select * from books order by category,cost desc;


10. List all the books that contain word SQL in the name of the book.
    => select * from books where bname like "%sql%";


11. List the Lib_Issue_Id, Issue_Date, Return_Date and No of days
    Book was issued.
    => select issue_id,issue_date,return_date,
        datediff(return_date,issue_date) as "no_of_days" from issue;


12. Find the details of the member of the Library in the order of their
    joining the library.
    => select * from member order by acc_open_date;


13. Display the count of total no of books issued to Member 101.
    => select count(*) from issue where member_id=2;
    => select member_id,count(*) from issue where member_id is not null group by member_id;


14. Display the total penalty due for all the members.
    => select sum(penalty_amount) from member;


15. Display the total no of members
    => select count(*) as "total member" from member;


16. Display the total no of books issued
    => select count(*) as "total books issued" from issue;


17. Display the average membership fees paid by all the members
    => select avg(fees_paid) as "avg fees" from member;


18. List the various categories and count of books in each category.
    => select category, count(*) from books group by category;


19 List the book_No and the number of times the book is issued in the
    descending order of count.
    => select book_no,count(*) from issue where book_no is not null 
        group by book_no order by count(*) desc;


20. Find the maximum, minimum, total and average penalty amount in
    the member table.
    => select min(penalty_amount),max(penalty_amount),
        avg(penalty_amount),sum(penalty_amount) from member;


21 .Display the member id and the no of books for each member that
    has issued more then 2 books.
    => select member_id, count(*) from issue group by member_id having count(*)>=2;


22. Display the member id, book no and no of times the same book is
    issued by the member in the descending order of count.
    => select member_id,book_no,count(*) from issue group by member_id,book_no;


23. Display the month and no of books issued each month in the
    descending order of count.
    => select month(issue_date),count(*) from issue 
        group by month(issue_date) order by count(*) desc;


24. List the book_no of all the books that are not issued to any
    member so far.
    => select book_no from books where 
        book_no not in (select book_no from issue);


25. List all the member id that exist in member table and has also at
    least one book issued by them.
    => select mid from member where mid in 
        (select member_id from issue group by member_id);


26. List the member ID with highest and lowest no of books issued.
    => (select member_id,count(*) "total" from issue group by member_id order by count(*) limit 1
        )
        union
        (select member_id,count(*) as "total" from issue group by member_id order by count(*) desc limit 1
        );


27. List all the Issue_details for books issued in December and July
    without using any arithmetic, Logical or comparison operator.
    => select * from issue where month(issue_date) in (7,12);


28. List the Book_No, Book_Name and Issue_date for all the books
    that are issued in month of December and belong to category Database.

    => select b.book_no,bname,issue_date from books b
        inner join issue i
        on i.book_no=b.book_no
        where month(i.issue_date)=12 and b.category='database';


29. List the Member Id, Member Name and max books allowed in the
    descending order of the max books allowed.

    =>  select mid,name,book_allowed from member order by book_allowed desc;


30. List the Book No, Book Name, Issue_date and Return_Date for all
    the books issued by Richa Sharma.
    => select b.book_no ,bname ,issue_date, return_date
        from books b inner join issue i
        on i.book_no=b.book_no
        inner join member m
        on i.member_id=m.mid
        where m.name='sneha patel';


31. List the details of all the members that have issued books in
    Database category.
    => select mid,m.name from member m
        inner join issue i
        on i.member_id = m.mid
        inner join books b
        on b.book_no = i.book_no
        where category = "database";


32. List all the books that have highest price in their own category.
    => select category, max(cost) from books group by category;


33. List all the Issue_Details where Issue_date is not within the
    Acc_open_date and Return_date for that member.
    => select i.* from issue i
        inner join member m
        on i.member_id=m.mid
        where issue_date < acc_open_date
        or issue_date > return_date;


34. List all the members that have not issued a single book so far.
    => select * from member where mid not in 
        (select member_id from issue group by member_id);


35. List all the members that have issued the same book as issued by
    Garima.
    => select m.mid,m.name,i.book_no from member m
        inner join issue i
        on i.member_id = m.mid
        where book_no in
        ( select i.book_no from issue i
        inner join member m
        on m.mid=i.member_id
        where m.name = 'garima sen') and m.name != 'garima sen';



36. List the Book_Name, Price of all the books that are not returned
    for more then 30 days.
    => select b.bname, cost from books b
        inner join issue i
        on i.book_no=b.book_no
        where i.return_date is null and datediff(curdate(),i.issue_date) > 30;


37. List all the authors and book_name that has more then 1 book
    written by them.
    => select bname,author from books where author in
        ( select author from books group by author having count(*)>1);


38. List the Member ID, Member Name of the people that have issued
    the highest and the lowest no of books.
    => (select mid,name,count(*) from member m
        inner join issue i
        on i.member_id=m.mid
        group by m.mid order by count(*) desc limit 1
        )
        union
        (select mid,name,count(*) from member m
        inner join issue i
        on i.member_id=m.mid
        group by m.mid order by count(*) limit 1
        );


39. List the details of highest 3 priced books.
    => select * from books order by cost desc limit 3;


40. List the total cost of all the books that are currently issued but not
    returned.
    => select sum(cost) from books where book_no in 
        (select book_no from issue where return_date is null);


41. List the details of the book that has been issued maximum no of
    times.
    => select b.book_no,count(*) from books b
        inner join issue i
        on i.book_no = b.book_no
        group by b.book_no order by count(*) desc;


42. List how many books are issued to lifetime members.
    => select i.book_no from member m
        inner join issue i
        on m.mid=i.member_id
        where mtype='annual';


43. List all member types and how many members are there in each
    type.
    => select mtype,count(*) from member group by mtype;


44. List first 5 members who had joined library.
    => select * from member order by acc_open_date limit 5;


45. List the members with their member type, who have issued books
    during the period 1st December to 31st December.
    => select m.* from member m
        inner join issue i
        on i.member_id = m.mid
        where month(issue_date)=12;


46. List all the members who have not returned books yet.
    => select m.* from member m
        inner join issue i
        on i.member_id = m.mid
        where return_date is null;


47. List all the members who joined library on the same date Garima
    joined.
    => select * from member where acc_open_date in
        ( select acc_open_date from member where name='garima sen') and mid !=2;


48. List all the members who has issued books from author “Loni” in
    the month of December
    => select m.* from member m
        inner join issue i
        on i.member_id=m.mid
        inner join books b
        on b.book_no = i.book_no
        where b.author='loni' and month(i.issue_date)=12;


49. List names of the authors whose books are least issued by
    lifetime members.
    => 


50. List the names of members who has issued the books whose cost
    is more than 300 rupees and whose author is “Scott Urman”
    => select m.name from member m
        inner join issue i
        on i.member_id = m.mid
        inner join books b
        on b.book_no=i.book_no
        where b.author='scott urman' and b.cost > 300;


51. List all lifetime members who joined library during 1st January
    2006 to 31st December 2006 but issued only one book.

    => select m.mid,m.mtype from member m
        inner join issue i
        on i.member_id = m.mid
        where m.mtype='liftime' and year(m.acc_open_date)=2006
        group by m.mtype,m.mid having count(i.book_no)=1;


52. Modify the Penalty_Amount for Garima Sen to Rs 100.

    => update member set penalty_amount=100 where mid=2;